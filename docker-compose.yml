version: '3.8'

services:
  crm-backend:
    build:
      context: ./crm-backend  # Répertoire contenant le Dockerfile du backend Laravel
    container_name: crm-backend
    ports:
      - "8000:80"  # Exposer le port 80 du backend Laravel
    networks:
      - crm-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db  # Utilisez 'db' comme hôte pour MySQL, car c'est le nom du service MySQL
      - DB_PORT=3306
      - DB_DATABASE=crm-backend
      - DB_USERNAME=root
      - DB_PASSWORD= # Si vous n'avez pas de mot de passe, laissez vide
    depends_on:
      - db  # S'assurer que MySQL est prêt avant le backend

  db:
    image: mysql:8
    container_name: crm-db
    environment:
      MYSQL_ROOT_PASSWORD: passer
      MYSQL_DATABASE: crm-backend
    ports:
      - "3308:3306"  # Exposer le port 3306 de MySQL sur le port 3308 de la machine locale
    networks:
      - crm-network

  crm-frontend:
    build:
      context: ./crm-frontend  # Répertoire contenant le Dockerfile du frontend Angular
    container_name: crm-frontend
    ports:
      - "4200:4200"  # Le port Angular 4200 exposé
    networks:
      - crm-network
    depends_on:
      - crm-backend  # Le frontend dépend du backend

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Permet à Jenkins de contrôler Docker
    networks:
      - crm-network
    environment:
      JENKINS_OPTS: --httpPort=8080

networks:
  crm-network:
    driver: bridge

volumes:
  jenkins_home:
